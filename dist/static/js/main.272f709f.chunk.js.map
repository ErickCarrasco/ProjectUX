{"version":3,"sources":["assets/backgroundTech.jpg","config/fbConfig.js","components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","store/actions/projectActions.js","components/projects/CreateProject.jsx","components/Jumbotron.js","components/Layout.js","components/SimpleBox.js","components/InputField.js","components/FooterFormButton.js","components/ErrorAlert.js","components/SocialMediaLogin.jsx","auth/Login.js","auth/userAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","twitterProvider","TwitterAuthProvider","compose","firebaseConnect","connect","dispatch","signOut","getState","then","type","props","profile","className","to","onClick","initials","SignedOutLinks","state","links","uid","ProjectSummary","project","title","src","imgURL","alt","height","width","price","ProjectList","projects","map","id","key","Dashboard","this","Component","console","log","firestore","ordered","notifications","firestoreConnect","collection","orderBy","ownProps","match","params","data","content","authorFirstName","authorLastName","SignIn","email","password","handleChange","e","target","setState","value","handleSubmit","preventDefault","authData","credentials","signIn","authError","onSubmit","htmlFor","name","onChange","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","newUser","signUp","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","createProject","fireStore","authorId","add","createdAt","Date","CreateProject","history","push","imageURL","bind","cols","rows","Styles","styled","div","backgroundTech","Jumbotron","fluid","Container","Layout","children","SimpleBox","body","footer","InputField","label","inputAction","placeholder","char","test","toLowerCase","style","FooterButton","submitLabel","otherLabel","goToLink","ErrorAlert","role","SocialMediaLogin","googleLogin","twitterLogin","Login","error","event","login","errStyle","borderColor","submitLogin","FooterFormButton","renderBody","getUser","payload","onAuthStateChanged","signInWithPopup","App","isLoaded","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.272f709f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundTech.fd890a0d.jpg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  // Put your firebase config here\r\n  apiKey: \"AIzaSyBql_6A0FWW4svQvEHASkiZ8frJBrCqKXY\",\r\n  authDomain: \"accountsux.firebaseapp.com\",\r\n  databaseURL: \"https://accountsux.firebaseio.com\",\r\n  projectId: \"accountsux\",\r\n  storageBucket: \"accountsux.appspot.com\",\r\n  messagingSenderId: \"91940529479\",\r\n  appId: \"1:91940529479:web:6badccd54c89769fb39862\"\r\n};\r\nfirebase.initializeApp(config);\r\n// firebase.firestore(); // We don't need this anymore because we create firestore in index.js\r\n\r\nexport default firebase;\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const twitterProvider = new firebase.auth.TwitterAuthProvider();","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\r\n  const handleSignOut = () => {\r\n    const { firebase } = props;\r\n    props.signOut(firebase);\r\n  };\r\n\r\n  const { profile } = props;\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Product</NavLink></li>\r\n      <li><NavLink to=\"/\" onClick={handleSignOut}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\r\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: firebase => dispatch(signOut(firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(null, mapDispatchToProps),\r\n)(SignedInLinks);\r\n","// Here we destructure authData object and do authorization\r\nexport const signIn = ({ credentials, firebase }) => (dispatch, getState) => {\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    credentials.email,\r\n    credentials.password,\r\n  ).then(() => {\r\n    dispatch({ type: 'LOGIN_SUCCESS' });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'LOGIN_ERROR', err });\r\n  });\r\n};\r\n\r\nexport const signOut = firebase => (dispatch, getState) => {\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n  });\r\n};\r\n\r\nexport const signUp = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  firebase.auth().createUserWithEmailAndPassword(\r\n    newUser.email,\r\n    newUser.password,\r\n  )\r\n    .then(resp => firestore.collection('usersAdmins').doc(resp.user.uid).set({\r\n      firstName: newUser.firstName,\r\n      lastName: newUser.lastName,\r\n      initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\r\n    }))\r\n    .then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err });\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => (\r\n  <ul className=\"right\">\r\n    <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n    <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n  </ul>\r\n);\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">Main Menu</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(Navbar);\r\n","import React from 'react';\r\n\r\n\r\nconst ProjectSummary = ({ project }) => (\r\n  <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <span className=\"card-title\">{project.title}</span>\r\n      <img src={project.imgURL}alt=\"No data\" height=\"300\" width=\"200\" />\r\n      <p>{project.price}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({ projects }) => (\r\n  <div className=\"project-list section\">\r\n    {projects && projects.map(project => (\r\n      <Link to={`/project/${project.id}`} key={project.id}>\r\n        <ProjectSummary project={project} />\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects, auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    \r\n  ]),\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  const { project } = props;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <img src={project.imgURL}alt=\"No data\" height=\"400\" width=\"500\"/>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container center\">\r\n      <p>Loading project...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps.match.params;\r\n  const { projects } = state.firestore.data;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' },\r\n  ]),\r\n)(ProjectDetails);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/label-has-for */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { signIn } from '../../store/actions/authActions';\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\r\n    // authActions to be authorized by using firebse.auth method\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const credentials = { ...state };\r\n    const authData = {\r\n      firebase,\r\n      credentials,\r\n    };\r\n\r\n    props.signIn(authData);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signIn: authData => dispatch(signIn(authData)),\r\n});\r\n\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(SignIn);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/label-has-for */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n\r\n    props.signUp(newUser, firebase);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  authError: state.auth.authError,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUp: (newUser, firebase) => dispatch(signUp(newUser, firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(SignUp);\r\n","const createProject = project => (dispatch, getState, { getFirestore }) => {\r\n  const fireStore = getFirestore();\r\n  const { profile } = getState().firebase;\r\n  const authorId = getState().firebase.auth.uid;\r\n\r\n  fireStore.collection('projects').add({\r\n    ...project,\r\n    authorFirstName: profile.firstName,\r\n    authorLastName: profile.lastName,\r\n    authorId,\r\n    createdAt: new Date(),\r\n  }).then(() => dispatch({\r\n    type: 'CREATE_PROJECT',\r\n    project,\r\n  })).catch(err => dispatch({\r\n    type: 'CREATE_PROJECT_ERROR',\r\n    err,\r\n  }));\r\n};\r\n\r\nexport default createProject;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createProject from '../../store/actions/projectActions';\r\n\r\n\r\nclass CreateProject extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      title: '',\r\n      content: '',\r\n      imageURL:'',\r\n      price:''\r\n    }\r\n    this.handleChange=this.handleChange.bind(this);\r\n  }\r\n \r\n  \r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const { props, state } = this;\r\n    props.createProject(state);\r\n\r\n    props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new product</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Product Content</label>\r\n            <textarea name=\"content\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">IMG URL</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Price</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          \r\n          <div className=\"input-field\">\r\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createProject: project => dispatch(createProject(project)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport backgroundTech from '../assets/backgroundTech.jpg';\r\n\r\nconst Styles = styled.div`\r\n    .jumbotron {\r\n        background: url(${backgroundTech}) no-repeat fixed bottom;\r\n        background-size: cover;\r\n        color: #efefef;\r\n        height: 200px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity: 0.6;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\nexport const Jumbotron = ()=>(\r\n    <Styles>\r\n        <Jumbo fluid className=\"jumbo\">\r\n            <div className=\"overlay\"></div>\r\n            <Container>\r\n                <h1>Welcome</h1>\r\n                <p>A new store for you.. Not really..</p>\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n)","import React from 'react';\r\nimport  Container from 'react-bootstrap/Container';\r\n\r\nexport const Layout = (props)=>(\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React, { Component } from 'react';\r\n\r\nexport default class SimpleBox extends Component {\r\n  render() {\r\n    const { title, body, footer } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"d-flex justify-content-center align-self-center\">\r\n          <div className=\"card col-sm-6\">\r\n            <div className=\"card-block\">\r\n              <div className=\"card-title text-center\">\r\n                {title}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {body}\r\n              </div>\r\n              {footer && <div className=\"card-footer\">\r\n                {footer}\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nfunction isVowel(char) {\r\n  return /^[aeiou]$/.test(char.toLowerCase());\r\n}\r\nconst InputField = (props) => {\r\n  return (\r\n    <div className=\"form-group row\">\r\n      <label htmlFor={props.id} className=\"col-sm-2 col-form-label\">{props.label}</label>\r\n      <div className=\"col-sm-10\">\r\n        <input onChange={props.inputAction} type={props.type}\r\n               id={props.id}\r\n               className=\"form-control\" placeholder={`Please enter ${isVowel(props.label[0]) ? \"an\" : \"a\"} ${props.label}...`} style={props.style}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InputField;\r\n","import React from 'react';\r\nimport '../Styles/App.css'\r\n\r\nconst FooterButton = (props) => {\r\n  const { submitLabel, otherLabel, goToLink, history } = props;\r\n  return (\r\n    <div className=\"d-flex justify-content-between\">\r\n      <button type=\"submit\" className=\"btn btn-primary\">{submitLabel}</button>\r\n      <button type=\"button\" className=\"btn btn-info\" onClick={() => {\r\n        history.push(goToLink);\r\n      }}>{otherLabel}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FooterButton;\r\n","import React from 'react';\r\n\r\nconst ErrorAlert = (props) => {\r\n  return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorAlert;","import React from 'react';\r\nimport '../Styles/bootstrap-social.css';\r\n\r\nconst SocialMediaLogin = (props) => {\r\n  const { googleLogin, twitterLogin } = props;\r\n  return (\r\n    <div className=\"d-flex justify-content-between mt-1\">\r\n      <button type=\"button\" className=\"btn btn-social btn-google\" onClick={googleLogin}>\r\n        <span className=\"fa fa-google\"/> Sign in with Google\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-social btn-twitter\" onClick={twitterLogin}>\r\n        <span className=\"fa fa-twitter\"/> Sign in with Twitter\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialMediaLogin;","import React, { Component } from 'react';\r\nimport SimpleBox from '../components/SimpleBox';\r\nimport InputField from '../components/InputField';\r\nimport FooterFormButton from '../components/FooterFormButton';\r\nimport { login, getUser, googleLogin, twitterLogin } from './userAction';\r\nimport { connect } from 'react-redux';\r\nimport ErrorAlert from '../components/ErrorAlert';\r\nimport SocialMediaLogin from '../components/SocialMediaLogin';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        email: '',\r\n        password: '',\r\n        error: ''\r\n      };\r\n    }\r\n    \r\n  \r\n    submitLogin(event) {\r\n      event.preventDefault();\r\n      this.props.login(this.state.email, this.state.password).catch(err => {\r\n        this.setState({\r\n          error: err\r\n        });\r\n      });\r\n    }\r\n  \r\n    renderBody() {\r\n      const errStyle = {\r\n        borderColor: 'red'\r\n      };\r\n  \r\n      return (\r\n        <form onSubmit={event => { this.submitLogin(event);}}>\r\n          <div>\r\n            <InputField id=\"email\" type=\"text\" label=\"Email\"\r\n                        inputAction={(event) => this.setState({ email: event.target.value })}\r\n                        style={this.state.error ? errStyle : null}\r\n            />\r\n            <InputField id=\"password\" type=\"password\" label=\"Password\"\r\n                        inputAction={(event) => this.setState({ password: event.target.value })}\r\n                        style={this.state.error ? errStyle : null}\r\n            />\r\n            {this.state.error && <ErrorAlert>Your username/password is incorrect</ErrorAlert>}\r\n            <FooterFormButton submitLabel=\"Sign in\" otherLabel=\"Create Account\"\r\n                              goToLink=\"/SignUp\" {...this.props}\r\n            />\r\n            <SocialMediaLogin {...this.props} />\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <SimpleBox title=\"Sign in\" body={this.renderBody()}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function mapStateToProps(state, ownProps) {\r\n    return { user: state.user };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, { login, getUser, googleLogin, twitterLogin })(Login);\r\n  ","import { auth, googleProvider, twitterProvider } from '../config/fbConfig';\r\n\r\nexport const GET_USER = 'get_user';\r\nexport const USER_STATUS = 'user_status';\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return dispatch => auth.signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\n\r\nexport function createAccount(email, password) {\r\n  return dispatch => auth.createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function googleLogin() {\r\n  return dispatch => auth.signInWithPopup(googleProvider);\r\n}\r\n\r\nexport function twitterLogin() {\r\n  return dispatch => auth.signInWithPopup(twitterProvider);\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\n\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\nimport { Jumbotron } from './components/Jumbotron';\r\nimport { Layout } from './components/Layout';\r\nimport Login from './auth/Login';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    // if auth is loaded then we render App.\r\n    // But if not then we doesn't render the one.\r\n    if (auth.isLoaded) {\r\n      return (\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Jumbotron />\r\n            <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Dashboard} />\r\n              <Route path=\"/project/:id\" component={ProjectDetails} />\r\n              <Route path=\"/signin\" component={Login}/>\r\n              <Route path=\"/signina\" component={SignIn} />\r\n              <Route path=\"/signup\" component={SignUp} />\r\n              <Route path=\"/create\" component={CreateProject} />\r\n              <Route path=\"/:any\" component={Dashboard} />\r\n            </Switch>\r\n            </Layout>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: 'Login fail',\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup failed');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'dead rigs', content: 'blah blah blah' },\r\n    { id: '2', title: 'another dead rig', content: 'blah blah blah' },\r\n    { id: '3', title: 'even more dead rig', content: 'blah blah blah' },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\r\nimport firebase from './config/fbConfig';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport rootReducer from './store/reducers/rootReducer';\r\n\r\n// We enhance compose in order to use Redux DevTools extension\r\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\r\nconst rrfConfig = {\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  userProfile: 'users',\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst store = createStore(rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\r\n  ));\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nconsole.log('store', store);\r\nconsole.log('state', store.getState());\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}